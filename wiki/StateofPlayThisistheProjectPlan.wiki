Ok so i seem to be developing this like a cow wandering across a field.

=State of play as of= 

*14th August*

After a few days off, and having a play about with some pretty front end stuff its time to return to the backend. This week we are moving over to joomla 1.5 for the trm site not an easy choice for steve as he'd just gotten the 1 site back to a state where people are using it, but the main reasons are the stuff im writing is developed for 1.5 and most importantly 1.0 isnt supported by joomla anymore for security patches and as the las site went down due to security it would of only been a matter of time again. So steve needs to be applauded for a difficuly decision and migrating over to 1.5 so soon, cheers mate.

right back to the back end. 
constraint, enoise the hosting company make you jump through hoops to get shell access so it makes the leaguemanager program difficult to develop for so will have to work around that somehow.



*10th August*

"create a date/track validator for poking data into the data base- lookup from the events table"

wonder what i meant when i typed that.

ok so i think i meant that before we poke the data into the database we do a look up to see something. rather than jumping in with this lets have a think about what im trying to fix or stop from happening. first coffee time though.
.

lets create a process (below) for the flow of data.

XML->PARSER->database holding table->RESULT PUSHER/BOUNUS POINT SCORER->database results table.

so step by step

  # XML, this is the results file produced by rFactor/ARCA
  # PARSER, This is perl code that extracts data from the XML file and pokes it into the temporary database table, ready to be validated and have bonus points assigned
  #  RESULT PUSHER/LEDALAPBOUNUS POINT SCORER, this needs to be written and will validate the data in the table before pushing it into the main drivers results table it will also assign bonus points to the driver

so what do we do next.
lets break down RESULT PUSHER/LEDALAPBOUNUS POINT SCORER

  # read a result line do some stuff on it and poke it into the main results table
  # if the driver led a lap give them 5 points
  # work out who led the most laps and give them 5 points for leading the most laps

so how can we do this.
  # read the line and see if it already exists in the results database based upon a specific piece of information such as DATE (which doesnt exist yet)

or maybe after we have imported some results put a flag somewhere to stop any results being imported. oh we need to have a look at the fields to see what needs creating i created a schema diagram somehwere, one of the columns will be eventid which we could use to do some logic with.

1081 need to extract the race date from the xml and remove part of it so
<Race>
<TimeString>2009/07/07 21:09:56</TimeString>
</Race?

end up as 2009/07/07

*Codefreeze*
1081, this will read in an XML and output the event name and create 2 variables $date $time of the event which is within the <Race>tags
so whats next, dunno cant remember. ah yes the inputer validator will use the following to verify the result.  Date of race result and Event name/track name.

we can do the race event from XML and Race event from sceduleid tallys with event name, which doesnt exist anyhwere yet, so that bit next look in XML for identification details of the track.
<TrackVenue>Iowa Speedway</TrackVenue>
<TrackCourse>Iowa Speedway</TrackCourse>
<TrackEvent>Prarie Meadows 250</TrackEvent>

right so lets do some code that does the following

  * read xml file which makes a note of the date and trackcourse.
  * see if we can get the schedule id based upon the above details.

it would appear that the date in XML uses / and the date in mysql uses - so have to convert date in XML to -
sorted with 
{{{$date = @dtss[0];
$date =~ tr/\//-/;}}}

*codefreeze*
1082, converts the date in XML to mysql format ready to inser into database

  * read xml file which makes a note of the date and trackcourse.
*codefreeze*
1083, displays trackcourse and date-converting date from XML format to mysql format

  * see if we can get the schedule id based upon the above details.
so here we go, we need some kind of if statement to either say yes or no, we shove the date trackcouse data into variables and compare with the output of an SQL statement. firstly lets see if we can pull the out put of an SQL statement in php admin that shows the id based upon being given a date, lets try

{{{select scheduleid from schedule where date = $date}}} substituting $date with the erm date 2009-06-09}}}
{{{
SELECT scheduleid
FROM `LMschedule` 
WHERE date = "2009-06-09"
}}}

comes back with 1 :)

so time to do the same from perl

*codefreeze*
1084, compares a hardcoded date in the perl SQL statement againts the MySQL data base and returns the eventid of the matching event.

next to merge that code with xml parser code

*codefreeze*
1085, gets the date from the XML and is put in the query which then returns the scheduleid number

1086, cleaned up the output to something more than just 3, it tells you the date in the xml matches with scheduleid3

1086, as well as telling you the schedule id based on the date in the xml, the program brings back the mysql coursetrack name.

Next to do some comparing of the coursename in the xml against the mysql 

1087, compares the track/course names and prints whether they are happy

----
*9th August.*
codefreeze on the server for Xpath1, Xpath2

_Xpath1_
Hardcoded with location of Arca results xml file and will output the following to screen

csv format

,trackname,drivername,Qualifying position,Race finish position,fastest race laptime,finishing status

_Xpath2_
you specify the name of the XML file to parse i.e. ./xpath2 pocono16jan09.xml and it out puts to screen the following

,trackname,drivername,Qualifying position,Race finish postition,fastest race laptime,finishing status,true/false did driver lead a lap,how many laps did driver lead for.

To Do List.
  # ~~learn to poke some data from perl into mysql~~ 9.8.1
  # ~~learn to create empty database~~
  # ~~poke into empty database the output of xpath2 by SQL~~
  # create a date/track validator for poking data into the data base- lookup from the events table
  # chill

*9th August*

9.8.1
Steve has mentioned that joomla uses community builder for its integrated user logon and forum, so we will use that in the future

going to work on poking a line from the results file into the data base. i will use the line
{{{
,Prarie Meadows 250,Mike Morris,1,2,23.1395,Finished Normally,true,3
}}}
as the control line

i will use a database table called 981 to push the data into
the syntax for putting stuff into a mysql database is ~~INSERT INTO people VALUES ('Euler', 'Leonhard', 248, NULL, 58, 'M')~~

so we need to find the perl equivlent and then "merge" this with our xpath2 parser

This creates a database table
{{{CREATE table jwracing_jwracing.981 LIKE jwracing_jwracing.importer;}}}
This copies the data from one table to another
{{{INSERT into jwracing_jwracing.981 SELECT * FROM jwracing_jwracing.importer;}}}

./8911.pl  
{{{,Prarie Meadows 250,Mike Morris,1,2,23.1395,Finished Normally,true,3}}}
adds the line into the database

8912 adds a complete xml result file into the database

*code freeze*
  # 8911.pl
  # 8912